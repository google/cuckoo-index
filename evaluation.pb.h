// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: evaluation.proto

#ifndef PROTOBUF_INCLUDED_evaluation_2eproto
#define PROTOBUF_INCLUDED_evaluation_2eproto

#include <string>


#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_evaluation_2eproto 

namespace protobuf_evaluation_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_evaluation_2eproto
namespace ci {
class BitmapStats;
class BitmapStatsDefaultTypeInternal;
extern BitmapStatsDefaultTypeInternal _BitmapStats_default_instance_;
class EvaluationResults;
class EvaluationResultsDefaultTypeInternal;
extern EvaluationResultsDefaultTypeInternal _EvaluationResults_default_instance_;
class EvaluationResults_TestCase;
class EvaluationResults_TestCaseDefaultTypeInternal;
extern EvaluationResults_TestCaseDefaultTypeInternal _EvaluationResults_TestCase_default_instance_;
}  // namespace ci
namespace google {
namespace protobuf {
template<> ::ci::BitmapStats* Arena::CreateMaybeMessage<::ci::BitmapStats>(Arena*);
template<> ::ci::EvaluationResults* Arena::CreateMaybeMessage<::ci::EvaluationResults>(Arena*);
template<> ::ci::EvaluationResults_TestCase* Arena::CreateMaybeMessage<::ci::EvaluationResults_TestCase>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ci {

// ===================================================================

class BitmapStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ci.BitmapStats) */ {
 public:
  BitmapStats();
  virtual ~BitmapStats();

  BitmapStats(const BitmapStats& from);

  inline BitmapStats& operator=(const BitmapStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BitmapStats(BitmapStats&& from) noexcept
    : BitmapStats() {
    *this = ::std::move(from);
  }

  inline BitmapStats& operator=(BitmapStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BitmapStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BitmapStats* internal_default_instance() {
    return reinterpret_cast<const BitmapStats*>(
               &_BitmapStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BitmapStats* other);
  friend void swap(BitmapStats& a, BitmapStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BitmapStats* New() const final {
    return CreateMaybeMessage<BitmapStats>(NULL);
  }

  BitmapStats* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BitmapStats>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BitmapStats& from);
  void MergeFrom(const BitmapStats& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BitmapStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double density = 1;
  bool has_density() const;
  void clear_density();
  static const int kDensityFieldNumber = 1;
  double density() const;
  void set_density(double value);

  // optional double clustering = 2;
  bool has_clustering() const;
  void clear_clustering();
  static const int kClusteringFieldNumber = 2;
  double clustering() const;
  void set_clustering(double value);

  // optional int64 bitpacked_size = 3;
  bool has_bitpacked_size() const;
  void clear_bitpacked_size();
  static const int kBitpackedSizeFieldNumber = 3;
  ::google::protobuf::int64 bitpacked_size() const;
  void set_bitpacked_size(::google::protobuf::int64 value);

  // optional int64 bitpacked_compressed_size = 4;
  bool has_bitpacked_compressed_size() const;
  void clear_bitpacked_compressed_size();
  static const int kBitpackedCompressedSizeFieldNumber = 4;
  ::google::protobuf::int64 bitpacked_compressed_size() const;
  void set_bitpacked_compressed_size(::google::protobuf::int64 value);

  // optional int64 roaring_size = 5;
  bool has_roaring_size() const;
  void clear_roaring_size();
  static const int kRoaringSizeFieldNumber = 5;
  ::google::protobuf::int64 roaring_size() const;
  void set_roaring_size(::google::protobuf::int64 value);

  // optional int64 roaring_compressed_size = 6;
  bool has_roaring_compressed_size() const;
  void clear_roaring_compressed_size();
  static const int kRoaringCompressedSizeFieldNumber = 6;
  ::google::protobuf::int64 roaring_compressed_size() const;
  void set_roaring_compressed_size(::google::protobuf::int64 value);

  // optional int64 roaring_individual_size = 7;
  bool has_roaring_individual_size() const;
  void clear_roaring_individual_size();
  static const int kRoaringIndividualSizeFieldNumber = 7;
  ::google::protobuf::int64 roaring_individual_size() const;
  void set_roaring_individual_size(::google::protobuf::int64 value);

  // optional int64 roaring_individual_compressed_size = 8;
  bool has_roaring_individual_compressed_size() const;
  void clear_roaring_individual_compressed_size();
  static const int kRoaringIndividualCompressedSizeFieldNumber = 8;
  ::google::protobuf::int64 roaring_individual_compressed_size() const;
  void set_roaring_individual_compressed_size(::google::protobuf::int64 value);

  // optional int64 rle_size = 9;
  bool has_rle_size() const;
  void clear_rle_size();
  static const int kRleSizeFieldNumber = 9;
  ::google::protobuf::int64 rle_size() const;
  void set_rle_size(::google::protobuf::int64 value);

  // optional int64 rle_compressed_size = 10;
  bool has_rle_compressed_size() const;
  void clear_rle_compressed_size();
  static const int kRleCompressedSizeFieldNumber = 10;
  ::google::protobuf::int64 rle_compressed_size() const;
  void set_rle_compressed_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ci.BitmapStats)
 private:
  void set_has_density();
  void clear_has_density();
  void set_has_clustering();
  void clear_has_clustering();
  void set_has_bitpacked_size();
  void clear_has_bitpacked_size();
  void set_has_bitpacked_compressed_size();
  void clear_has_bitpacked_compressed_size();
  void set_has_roaring_size();
  void clear_has_roaring_size();
  void set_has_roaring_compressed_size();
  void clear_has_roaring_compressed_size();
  void set_has_roaring_individual_size();
  void clear_has_roaring_individual_size();
  void set_has_roaring_individual_compressed_size();
  void clear_has_roaring_individual_compressed_size();
  void set_has_rle_size();
  void clear_has_rle_size();
  void set_has_rle_compressed_size();
  void clear_has_rle_compressed_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double density_;
  double clustering_;
  ::google::protobuf::int64 bitpacked_size_;
  ::google::protobuf::int64 bitpacked_compressed_size_;
  ::google::protobuf::int64 roaring_size_;
  ::google::protobuf::int64 roaring_compressed_size_;
  ::google::protobuf::int64 roaring_individual_size_;
  ::google::protobuf::int64 roaring_individual_compressed_size_;
  ::google::protobuf::int64 rle_size_;
  ::google::protobuf::int64 rle_compressed_size_;
  friend struct ::protobuf_evaluation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvaluationResults_TestCase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ci.EvaluationResults.TestCase) */ {
 public:
  EvaluationResults_TestCase();
  virtual ~EvaluationResults_TestCase();

  EvaluationResults_TestCase(const EvaluationResults_TestCase& from);

  inline EvaluationResults_TestCase& operator=(const EvaluationResults_TestCase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvaluationResults_TestCase(EvaluationResults_TestCase&& from) noexcept
    : EvaluationResults_TestCase() {
    *this = ::std::move(from);
  }

  inline EvaluationResults_TestCase& operator=(EvaluationResults_TestCase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EvaluationResults_TestCase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EvaluationResults_TestCase* internal_default_instance() {
    return reinterpret_cast<const EvaluationResults_TestCase*>(
               &_EvaluationResults_TestCase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(EvaluationResults_TestCase* other);
  friend void swap(EvaluationResults_TestCase& a, EvaluationResults_TestCase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvaluationResults_TestCase* New() const final {
    return CreateMaybeMessage<EvaluationResults_TestCase>(NULL);
  }

  EvaluationResults_TestCase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EvaluationResults_TestCase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EvaluationResults_TestCase& from);
  void MergeFrom(const EvaluationResults_TestCase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EvaluationResults_TestCase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int64 num_lookups = 2;
  bool has_num_lookups() const;
  void clear_num_lookups();
  static const int kNumLookupsFieldNumber = 2;
  ::google::protobuf::int64 num_lookups() const;
  void set_num_lookups(::google::protobuf::int64 value);

  // optional int64 num_false_positives = 3;
  bool has_num_false_positives() const;
  void clear_num_false_positives();
  static const int kNumFalsePositivesFieldNumber = 3;
  ::google::protobuf::int64 num_false_positives() const;
  void set_num_false_positives(::google::protobuf::int64 value);

  // optional int64 num_true_negatives = 4;
  bool has_num_true_negatives() const;
  void clear_num_true_negatives();
  static const int kNumTrueNegativesFieldNumber = 4;
  ::google::protobuf::int64 num_true_negatives() const;
  void set_num_true_negatives(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ci.EvaluationResults.TestCase)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_num_lookups();
  void clear_has_num_lookups();
  void set_has_num_false_positives();
  void clear_has_num_false_positives();
  void set_has_num_true_negatives();
  void clear_has_num_true_negatives();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 num_lookups_;
  ::google::protobuf::int64 num_false_positives_;
  ::google::protobuf::int64 num_true_negatives_;
  friend struct ::protobuf_evaluation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvaluationResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ci.EvaluationResults) */ {
 public:
  EvaluationResults();
  virtual ~EvaluationResults();

  EvaluationResults(const EvaluationResults& from);

  inline EvaluationResults& operator=(const EvaluationResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvaluationResults(EvaluationResults&& from) noexcept
    : EvaluationResults() {
    *this = ::std::move(from);
  }

  inline EvaluationResults& operator=(EvaluationResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EvaluationResults& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EvaluationResults* internal_default_instance() {
    return reinterpret_cast<const EvaluationResults*>(
               &_EvaluationResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(EvaluationResults* other);
  friend void swap(EvaluationResults& a, EvaluationResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvaluationResults* New() const final {
    return CreateMaybeMessage<EvaluationResults>(NULL);
  }

  EvaluationResults* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EvaluationResults>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EvaluationResults& from);
  void MergeFrom(const EvaluationResults& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EvaluationResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EvaluationResults_TestCase TestCase;

  // accessors -------------------------------------------------------

  // repeated .ci.EvaluationResults.TestCase test_cases = 8;
  int test_cases_size() const;
  void clear_test_cases();
  static const int kTestCasesFieldNumber = 8;
  ::ci::EvaluationResults_TestCase* mutable_test_cases(int index);
  ::google::protobuf::RepeatedPtrField< ::ci::EvaluationResults_TestCase >*
      mutable_test_cases();
  const ::ci::EvaluationResults_TestCase& test_cases(int index) const;
  ::ci::EvaluationResults_TestCase* add_test_cases();
  const ::google::protobuf::RepeatedPtrField< ::ci::EvaluationResults_TestCase >&
      test_cases() const;

  // optional string index_structure = 1;
  bool has_index_structure() const;
  void clear_index_structure();
  static const int kIndexStructureFieldNumber = 1;
  const ::std::string& index_structure() const;
  void set_index_structure(const ::std::string& value);
  #if LANG_CXX11
  void set_index_structure(::std::string&& value);
  #endif
  void set_index_structure(const char* value);
  void set_index_structure(const char* value, size_t size);
  ::std::string* mutable_index_structure();
  ::std::string* release_index_structure();
  void set_allocated_index_structure(::std::string* index_structure);

  // optional string column_name = 4;
  bool has_column_name() const;
  void clear_column_name();
  static const int kColumnNameFieldNumber = 4;
  const ::std::string& column_name() const;
  void set_column_name(const ::std::string& value);
  #if LANG_CXX11
  void set_column_name(::std::string&& value);
  #endif
  void set_column_name(const char* value);
  void set_column_name(const char* value, size_t size);
  ::std::string* mutable_column_name();
  ::std::string* release_column_name();
  void set_allocated_column_name(::std::string* column_name);

  // optional string column_type = 5;
  bool has_column_type() const;
  void clear_column_type();
  static const int kColumnTypeFieldNumber = 5;
  const ::std::string& column_type() const;
  void set_column_type(const ::std::string& value);
  #if LANG_CXX11
  void set_column_type(::std::string&& value);
  #endif
  void set_column_type(const char* value);
  void set_column_type(const char* value, size_t size);
  ::std::string* mutable_column_type();
  ::std::string* release_column_type();
  void set_allocated_column_type(::std::string* column_type);

  // optional .ci.BitmapStats bitmap_stats = 11;
  bool has_bitmap_stats() const;
  void clear_bitmap_stats();
  static const int kBitmapStatsFieldNumber = 11;
  private:
  const ::ci::BitmapStats& _internal_bitmap_stats() const;
  public:
  const ::ci::BitmapStats& bitmap_stats() const;
  ::ci::BitmapStats* release_bitmap_stats();
  ::ci::BitmapStats* mutable_bitmap_stats();
  void set_allocated_bitmap_stats(::ci::BitmapStats* bitmap_stats);

  // optional int64 num_rows_per_stripe = 2;
  bool has_num_rows_per_stripe() const;
  void clear_num_rows_per_stripe();
  static const int kNumRowsPerStripeFieldNumber = 2;
  ::google::protobuf::int64 num_rows_per_stripe() const;
  void set_num_rows_per_stripe(::google::protobuf::int64 value);

  // optional int64 num_stripes = 3;
  bool has_num_stripes() const;
  void clear_num_stripes();
  static const int kNumStripesFieldNumber = 3;
  ::google::protobuf::int64 num_stripes() const;
  void set_num_stripes(::google::protobuf::int64 value);

  // optional int64 column_cardinality = 6;
  bool has_column_cardinality() const;
  void clear_column_cardinality();
  static const int kColumnCardinalityFieldNumber = 6;
  ::google::protobuf::int64 column_cardinality() const;
  void set_column_cardinality(::google::protobuf::int64 value);

  // optional int64 index_size_bytes = 7;
  bool has_index_size_bytes() const;
  void clear_index_size_bytes();
  static const int kIndexSizeBytesFieldNumber = 7;
  ::google::protobuf::int64 index_size_bytes() const;
  void set_index_size_bytes(::google::protobuf::int64 value);

  // optional int64 index_compressed_size_bytes = 9;
  bool has_index_compressed_size_bytes() const;
  void clear_index_compressed_size_bytes();
  static const int kIndexCompressedSizeBytesFieldNumber = 9;
  ::google::protobuf::int64 index_compressed_size_bytes() const;
  void set_index_compressed_size_bytes(::google::protobuf::int64 value);

  // optional int64 column_compressed_size_bytes = 10;
  bool has_column_compressed_size_bytes() const;
  void clear_column_compressed_size_bytes();
  static const int kColumnCompressedSizeBytesFieldNumber = 10;
  ::google::protobuf::int64 column_compressed_size_bytes() const;
  void set_column_compressed_size_bytes(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ci.EvaluationResults)
 private:
  void set_has_index_structure();
  void clear_has_index_structure();
  void set_has_num_rows_per_stripe();
  void clear_has_num_rows_per_stripe();
  void set_has_num_stripes();
  void clear_has_num_stripes();
  void set_has_column_name();
  void clear_has_column_name();
  void set_has_column_type();
  void clear_has_column_type();
  void set_has_column_cardinality();
  void clear_has_column_cardinality();
  void set_has_column_compressed_size_bytes();
  void clear_has_column_compressed_size_bytes();
  void set_has_index_size_bytes();
  void clear_has_index_size_bytes();
  void set_has_index_compressed_size_bytes();
  void clear_has_index_compressed_size_bytes();
  void set_has_bitmap_stats();
  void clear_has_bitmap_stats();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ci::EvaluationResults_TestCase > test_cases_;
  ::google::protobuf::internal::ArenaStringPtr index_structure_;
  ::google::protobuf::internal::ArenaStringPtr column_name_;
  ::google::protobuf::internal::ArenaStringPtr column_type_;
  ::ci::BitmapStats* bitmap_stats_;
  ::google::protobuf::int64 num_rows_per_stripe_;
  ::google::protobuf::int64 num_stripes_;
  ::google::protobuf::int64 column_cardinality_;
  ::google::protobuf::int64 index_size_bytes_;
  ::google::protobuf::int64 index_compressed_size_bytes_;
  ::google::protobuf::int64 column_compressed_size_bytes_;
  friend struct ::protobuf_evaluation_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BitmapStats

// optional double density = 1;
inline bool BitmapStats::has_density() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BitmapStats::set_has_density() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BitmapStats::clear_has_density() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BitmapStats::clear_density() {
  density_ = 0;
  clear_has_density();
}
inline double BitmapStats::density() const {
  // @@protoc_insertion_point(field_get:ci.BitmapStats.density)
  return density_;
}
inline void BitmapStats::set_density(double value) {
  set_has_density();
  density_ = value;
  // @@protoc_insertion_point(field_set:ci.BitmapStats.density)
}

// optional double clustering = 2;
inline bool BitmapStats::has_clustering() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BitmapStats::set_has_clustering() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BitmapStats::clear_has_clustering() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BitmapStats::clear_clustering() {
  clustering_ = 0;
  clear_has_clustering();
}
inline double BitmapStats::clustering() const {
  // @@protoc_insertion_point(field_get:ci.BitmapStats.clustering)
  return clustering_;
}
inline void BitmapStats::set_clustering(double value) {
  set_has_clustering();
  clustering_ = value;
  // @@protoc_insertion_point(field_set:ci.BitmapStats.clustering)
}

// optional int64 bitpacked_size = 3;
inline bool BitmapStats::has_bitpacked_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BitmapStats::set_has_bitpacked_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BitmapStats::clear_has_bitpacked_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BitmapStats::clear_bitpacked_size() {
  bitpacked_size_ = GOOGLE_LONGLONG(0);
  clear_has_bitpacked_size();
}
inline ::google::protobuf::int64 BitmapStats::bitpacked_size() const {
  // @@protoc_insertion_point(field_get:ci.BitmapStats.bitpacked_size)
  return bitpacked_size_;
}
inline void BitmapStats::set_bitpacked_size(::google::protobuf::int64 value) {
  set_has_bitpacked_size();
  bitpacked_size_ = value;
  // @@protoc_insertion_point(field_set:ci.BitmapStats.bitpacked_size)
}

// optional int64 bitpacked_compressed_size = 4;
inline bool BitmapStats::has_bitpacked_compressed_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BitmapStats::set_has_bitpacked_compressed_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BitmapStats::clear_has_bitpacked_compressed_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BitmapStats::clear_bitpacked_compressed_size() {
  bitpacked_compressed_size_ = GOOGLE_LONGLONG(0);
  clear_has_bitpacked_compressed_size();
}
inline ::google::protobuf::int64 BitmapStats::bitpacked_compressed_size() const {
  // @@protoc_insertion_point(field_get:ci.BitmapStats.bitpacked_compressed_size)
  return bitpacked_compressed_size_;
}
inline void BitmapStats::set_bitpacked_compressed_size(::google::protobuf::int64 value) {
  set_has_bitpacked_compressed_size();
  bitpacked_compressed_size_ = value;
  // @@protoc_insertion_point(field_set:ci.BitmapStats.bitpacked_compressed_size)
}

// optional int64 roaring_size = 5;
inline bool BitmapStats::has_roaring_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BitmapStats::set_has_roaring_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BitmapStats::clear_has_roaring_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BitmapStats::clear_roaring_size() {
  roaring_size_ = GOOGLE_LONGLONG(0);
  clear_has_roaring_size();
}
inline ::google::protobuf::int64 BitmapStats::roaring_size() const {
  // @@protoc_insertion_point(field_get:ci.BitmapStats.roaring_size)
  return roaring_size_;
}
inline void BitmapStats::set_roaring_size(::google::protobuf::int64 value) {
  set_has_roaring_size();
  roaring_size_ = value;
  // @@protoc_insertion_point(field_set:ci.BitmapStats.roaring_size)
}

// optional int64 roaring_compressed_size = 6;
inline bool BitmapStats::has_roaring_compressed_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BitmapStats::set_has_roaring_compressed_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BitmapStats::clear_has_roaring_compressed_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BitmapStats::clear_roaring_compressed_size() {
  roaring_compressed_size_ = GOOGLE_LONGLONG(0);
  clear_has_roaring_compressed_size();
}
inline ::google::protobuf::int64 BitmapStats::roaring_compressed_size() const {
  // @@protoc_insertion_point(field_get:ci.BitmapStats.roaring_compressed_size)
  return roaring_compressed_size_;
}
inline void BitmapStats::set_roaring_compressed_size(::google::protobuf::int64 value) {
  set_has_roaring_compressed_size();
  roaring_compressed_size_ = value;
  // @@protoc_insertion_point(field_set:ci.BitmapStats.roaring_compressed_size)
}

// optional int64 roaring_individual_size = 7;
inline bool BitmapStats::has_roaring_individual_size() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BitmapStats::set_has_roaring_individual_size() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BitmapStats::clear_has_roaring_individual_size() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BitmapStats::clear_roaring_individual_size() {
  roaring_individual_size_ = GOOGLE_LONGLONG(0);
  clear_has_roaring_individual_size();
}
inline ::google::protobuf::int64 BitmapStats::roaring_individual_size() const {
  // @@protoc_insertion_point(field_get:ci.BitmapStats.roaring_individual_size)
  return roaring_individual_size_;
}
inline void BitmapStats::set_roaring_individual_size(::google::protobuf::int64 value) {
  set_has_roaring_individual_size();
  roaring_individual_size_ = value;
  // @@protoc_insertion_point(field_set:ci.BitmapStats.roaring_individual_size)
}

// optional int64 roaring_individual_compressed_size = 8;
inline bool BitmapStats::has_roaring_individual_compressed_size() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BitmapStats::set_has_roaring_individual_compressed_size() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BitmapStats::clear_has_roaring_individual_compressed_size() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BitmapStats::clear_roaring_individual_compressed_size() {
  roaring_individual_compressed_size_ = GOOGLE_LONGLONG(0);
  clear_has_roaring_individual_compressed_size();
}
inline ::google::protobuf::int64 BitmapStats::roaring_individual_compressed_size() const {
  // @@protoc_insertion_point(field_get:ci.BitmapStats.roaring_individual_compressed_size)
  return roaring_individual_compressed_size_;
}
inline void BitmapStats::set_roaring_individual_compressed_size(::google::protobuf::int64 value) {
  set_has_roaring_individual_compressed_size();
  roaring_individual_compressed_size_ = value;
  // @@protoc_insertion_point(field_set:ci.BitmapStats.roaring_individual_compressed_size)
}

// optional int64 rle_size = 9;
inline bool BitmapStats::has_rle_size() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BitmapStats::set_has_rle_size() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BitmapStats::clear_has_rle_size() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BitmapStats::clear_rle_size() {
  rle_size_ = GOOGLE_LONGLONG(0);
  clear_has_rle_size();
}
inline ::google::protobuf::int64 BitmapStats::rle_size() const {
  // @@protoc_insertion_point(field_get:ci.BitmapStats.rle_size)
  return rle_size_;
}
inline void BitmapStats::set_rle_size(::google::protobuf::int64 value) {
  set_has_rle_size();
  rle_size_ = value;
  // @@protoc_insertion_point(field_set:ci.BitmapStats.rle_size)
}

// optional int64 rle_compressed_size = 10;
inline bool BitmapStats::has_rle_compressed_size() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BitmapStats::set_has_rle_compressed_size() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BitmapStats::clear_has_rle_compressed_size() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BitmapStats::clear_rle_compressed_size() {
  rle_compressed_size_ = GOOGLE_LONGLONG(0);
  clear_has_rle_compressed_size();
}
inline ::google::protobuf::int64 BitmapStats::rle_compressed_size() const {
  // @@protoc_insertion_point(field_get:ci.BitmapStats.rle_compressed_size)
  return rle_compressed_size_;
}
inline void BitmapStats::set_rle_compressed_size(::google::protobuf::int64 value) {
  set_has_rle_compressed_size();
  rle_compressed_size_ = value;
  // @@protoc_insertion_point(field_set:ci.BitmapStats.rle_compressed_size)
}

// -------------------------------------------------------------------

// EvaluationResults_TestCase

// optional string name = 1;
inline bool EvaluationResults_TestCase::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EvaluationResults_TestCase::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EvaluationResults_TestCase::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EvaluationResults_TestCase::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& EvaluationResults_TestCase::name() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.TestCase.name)
  return name_.GetNoArena();
}
inline void EvaluationResults_TestCase::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.TestCase.name)
}
#if LANG_CXX11
inline void EvaluationResults_TestCase::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ci.EvaluationResults.TestCase.name)
}
#endif
inline void EvaluationResults_TestCase::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ci.EvaluationResults.TestCase.name)
}
inline void EvaluationResults_TestCase::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ci.EvaluationResults.TestCase.name)
}
inline ::std::string* EvaluationResults_TestCase::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ci.EvaluationResults.TestCase.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvaluationResults_TestCase::release_name() {
  // @@protoc_insertion_point(field_release:ci.EvaluationResults.TestCase.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvaluationResults_TestCase::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ci.EvaluationResults.TestCase.name)
}

// optional int64 num_lookups = 2;
inline bool EvaluationResults_TestCase::has_num_lookups() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EvaluationResults_TestCase::set_has_num_lookups() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EvaluationResults_TestCase::clear_has_num_lookups() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EvaluationResults_TestCase::clear_num_lookups() {
  num_lookups_ = GOOGLE_LONGLONG(0);
  clear_has_num_lookups();
}
inline ::google::protobuf::int64 EvaluationResults_TestCase::num_lookups() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.TestCase.num_lookups)
  return num_lookups_;
}
inline void EvaluationResults_TestCase::set_num_lookups(::google::protobuf::int64 value) {
  set_has_num_lookups();
  num_lookups_ = value;
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.TestCase.num_lookups)
}

// optional int64 num_false_positives = 3;
inline bool EvaluationResults_TestCase::has_num_false_positives() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EvaluationResults_TestCase::set_has_num_false_positives() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EvaluationResults_TestCase::clear_has_num_false_positives() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EvaluationResults_TestCase::clear_num_false_positives() {
  num_false_positives_ = GOOGLE_LONGLONG(0);
  clear_has_num_false_positives();
}
inline ::google::protobuf::int64 EvaluationResults_TestCase::num_false_positives() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.TestCase.num_false_positives)
  return num_false_positives_;
}
inline void EvaluationResults_TestCase::set_num_false_positives(::google::protobuf::int64 value) {
  set_has_num_false_positives();
  num_false_positives_ = value;
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.TestCase.num_false_positives)
}

// optional int64 num_true_negatives = 4;
inline bool EvaluationResults_TestCase::has_num_true_negatives() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EvaluationResults_TestCase::set_has_num_true_negatives() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EvaluationResults_TestCase::clear_has_num_true_negatives() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EvaluationResults_TestCase::clear_num_true_negatives() {
  num_true_negatives_ = GOOGLE_LONGLONG(0);
  clear_has_num_true_negatives();
}
inline ::google::protobuf::int64 EvaluationResults_TestCase::num_true_negatives() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.TestCase.num_true_negatives)
  return num_true_negatives_;
}
inline void EvaluationResults_TestCase::set_num_true_negatives(::google::protobuf::int64 value) {
  set_has_num_true_negatives();
  num_true_negatives_ = value;
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.TestCase.num_true_negatives)
}

// -------------------------------------------------------------------

// EvaluationResults

// optional string index_structure = 1;
inline bool EvaluationResults::has_index_structure() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EvaluationResults::set_has_index_structure() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EvaluationResults::clear_has_index_structure() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EvaluationResults::clear_index_structure() {
  index_structure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_index_structure();
}
inline const ::std::string& EvaluationResults::index_structure() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.index_structure)
  return index_structure_.GetNoArena();
}
inline void EvaluationResults::set_index_structure(const ::std::string& value) {
  set_has_index_structure();
  index_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.index_structure)
}
#if LANG_CXX11
inline void EvaluationResults::set_index_structure(::std::string&& value) {
  set_has_index_structure();
  index_structure_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ci.EvaluationResults.index_structure)
}
#endif
inline void EvaluationResults::set_index_structure(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_index_structure();
  index_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ci.EvaluationResults.index_structure)
}
inline void EvaluationResults::set_index_structure(const char* value, size_t size) {
  set_has_index_structure();
  index_structure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ci.EvaluationResults.index_structure)
}
inline ::std::string* EvaluationResults::mutable_index_structure() {
  set_has_index_structure();
  // @@protoc_insertion_point(field_mutable:ci.EvaluationResults.index_structure)
  return index_structure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvaluationResults::release_index_structure() {
  // @@protoc_insertion_point(field_release:ci.EvaluationResults.index_structure)
  if (!has_index_structure()) {
    return NULL;
  }
  clear_has_index_structure();
  return index_structure_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvaluationResults::set_allocated_index_structure(::std::string* index_structure) {
  if (index_structure != NULL) {
    set_has_index_structure();
  } else {
    clear_has_index_structure();
  }
  index_structure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), index_structure);
  // @@protoc_insertion_point(field_set_allocated:ci.EvaluationResults.index_structure)
}

// optional int64 num_rows_per_stripe = 2;
inline bool EvaluationResults::has_num_rows_per_stripe() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EvaluationResults::set_has_num_rows_per_stripe() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EvaluationResults::clear_has_num_rows_per_stripe() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EvaluationResults::clear_num_rows_per_stripe() {
  num_rows_per_stripe_ = GOOGLE_LONGLONG(0);
  clear_has_num_rows_per_stripe();
}
inline ::google::protobuf::int64 EvaluationResults::num_rows_per_stripe() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.num_rows_per_stripe)
  return num_rows_per_stripe_;
}
inline void EvaluationResults::set_num_rows_per_stripe(::google::protobuf::int64 value) {
  set_has_num_rows_per_stripe();
  num_rows_per_stripe_ = value;
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.num_rows_per_stripe)
}

// optional int64 num_stripes = 3;
inline bool EvaluationResults::has_num_stripes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EvaluationResults::set_has_num_stripes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EvaluationResults::clear_has_num_stripes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EvaluationResults::clear_num_stripes() {
  num_stripes_ = GOOGLE_LONGLONG(0);
  clear_has_num_stripes();
}
inline ::google::protobuf::int64 EvaluationResults::num_stripes() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.num_stripes)
  return num_stripes_;
}
inline void EvaluationResults::set_num_stripes(::google::protobuf::int64 value) {
  set_has_num_stripes();
  num_stripes_ = value;
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.num_stripes)
}

// optional string column_name = 4;
inline bool EvaluationResults::has_column_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EvaluationResults::set_has_column_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EvaluationResults::clear_has_column_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EvaluationResults::clear_column_name() {
  column_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_column_name();
}
inline const ::std::string& EvaluationResults::column_name() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.column_name)
  return column_name_.GetNoArena();
}
inline void EvaluationResults::set_column_name(const ::std::string& value) {
  set_has_column_name();
  column_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.column_name)
}
#if LANG_CXX11
inline void EvaluationResults::set_column_name(::std::string&& value) {
  set_has_column_name();
  column_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ci.EvaluationResults.column_name)
}
#endif
inline void EvaluationResults::set_column_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_column_name();
  column_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ci.EvaluationResults.column_name)
}
inline void EvaluationResults::set_column_name(const char* value, size_t size) {
  set_has_column_name();
  column_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ci.EvaluationResults.column_name)
}
inline ::std::string* EvaluationResults::mutable_column_name() {
  set_has_column_name();
  // @@protoc_insertion_point(field_mutable:ci.EvaluationResults.column_name)
  return column_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvaluationResults::release_column_name() {
  // @@protoc_insertion_point(field_release:ci.EvaluationResults.column_name)
  if (!has_column_name()) {
    return NULL;
  }
  clear_has_column_name();
  return column_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvaluationResults::set_allocated_column_name(::std::string* column_name) {
  if (column_name != NULL) {
    set_has_column_name();
  } else {
    clear_has_column_name();
  }
  column_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), column_name);
  // @@protoc_insertion_point(field_set_allocated:ci.EvaluationResults.column_name)
}

// optional string column_type = 5;
inline bool EvaluationResults::has_column_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EvaluationResults::set_has_column_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EvaluationResults::clear_has_column_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EvaluationResults::clear_column_type() {
  column_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_column_type();
}
inline const ::std::string& EvaluationResults::column_type() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.column_type)
  return column_type_.GetNoArena();
}
inline void EvaluationResults::set_column_type(const ::std::string& value) {
  set_has_column_type();
  column_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.column_type)
}
#if LANG_CXX11
inline void EvaluationResults::set_column_type(::std::string&& value) {
  set_has_column_type();
  column_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ci.EvaluationResults.column_type)
}
#endif
inline void EvaluationResults::set_column_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_column_type();
  column_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ci.EvaluationResults.column_type)
}
inline void EvaluationResults::set_column_type(const char* value, size_t size) {
  set_has_column_type();
  column_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ci.EvaluationResults.column_type)
}
inline ::std::string* EvaluationResults::mutable_column_type() {
  set_has_column_type();
  // @@protoc_insertion_point(field_mutable:ci.EvaluationResults.column_type)
  return column_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EvaluationResults::release_column_type() {
  // @@protoc_insertion_point(field_release:ci.EvaluationResults.column_type)
  if (!has_column_type()) {
    return NULL;
  }
  clear_has_column_type();
  return column_type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EvaluationResults::set_allocated_column_type(::std::string* column_type) {
  if (column_type != NULL) {
    set_has_column_type();
  } else {
    clear_has_column_type();
  }
  column_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), column_type);
  // @@protoc_insertion_point(field_set_allocated:ci.EvaluationResults.column_type)
}

// optional int64 column_cardinality = 6;
inline bool EvaluationResults::has_column_cardinality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EvaluationResults::set_has_column_cardinality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EvaluationResults::clear_has_column_cardinality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EvaluationResults::clear_column_cardinality() {
  column_cardinality_ = GOOGLE_LONGLONG(0);
  clear_has_column_cardinality();
}
inline ::google::protobuf::int64 EvaluationResults::column_cardinality() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.column_cardinality)
  return column_cardinality_;
}
inline void EvaluationResults::set_column_cardinality(::google::protobuf::int64 value) {
  set_has_column_cardinality();
  column_cardinality_ = value;
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.column_cardinality)
}

// optional int64 column_compressed_size_bytes = 10;
inline bool EvaluationResults::has_column_compressed_size_bytes() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EvaluationResults::set_has_column_compressed_size_bytes() {
  _has_bits_[0] |= 0x00000200u;
}
inline void EvaluationResults::clear_has_column_compressed_size_bytes() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void EvaluationResults::clear_column_compressed_size_bytes() {
  column_compressed_size_bytes_ = GOOGLE_LONGLONG(0);
  clear_has_column_compressed_size_bytes();
}
inline ::google::protobuf::int64 EvaluationResults::column_compressed_size_bytes() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.column_compressed_size_bytes)
  return column_compressed_size_bytes_;
}
inline void EvaluationResults::set_column_compressed_size_bytes(::google::protobuf::int64 value) {
  set_has_column_compressed_size_bytes();
  column_compressed_size_bytes_ = value;
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.column_compressed_size_bytes)
}

// optional int64 index_size_bytes = 7;
inline bool EvaluationResults::has_index_size_bytes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EvaluationResults::set_has_index_size_bytes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EvaluationResults::clear_has_index_size_bytes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EvaluationResults::clear_index_size_bytes() {
  index_size_bytes_ = GOOGLE_LONGLONG(0);
  clear_has_index_size_bytes();
}
inline ::google::protobuf::int64 EvaluationResults::index_size_bytes() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.index_size_bytes)
  return index_size_bytes_;
}
inline void EvaluationResults::set_index_size_bytes(::google::protobuf::int64 value) {
  set_has_index_size_bytes();
  index_size_bytes_ = value;
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.index_size_bytes)
}

// optional int64 index_compressed_size_bytes = 9;
inline bool EvaluationResults::has_index_compressed_size_bytes() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EvaluationResults::set_has_index_compressed_size_bytes() {
  _has_bits_[0] |= 0x00000100u;
}
inline void EvaluationResults::clear_has_index_compressed_size_bytes() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void EvaluationResults::clear_index_compressed_size_bytes() {
  index_compressed_size_bytes_ = GOOGLE_LONGLONG(0);
  clear_has_index_compressed_size_bytes();
}
inline ::google::protobuf::int64 EvaluationResults::index_compressed_size_bytes() const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.index_compressed_size_bytes)
  return index_compressed_size_bytes_;
}
inline void EvaluationResults::set_index_compressed_size_bytes(::google::protobuf::int64 value) {
  set_has_index_compressed_size_bytes();
  index_compressed_size_bytes_ = value;
  // @@protoc_insertion_point(field_set:ci.EvaluationResults.index_compressed_size_bytes)
}

// optional .ci.BitmapStats bitmap_stats = 11;
inline bool EvaluationResults::has_bitmap_stats() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EvaluationResults::set_has_bitmap_stats() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EvaluationResults::clear_has_bitmap_stats() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EvaluationResults::clear_bitmap_stats() {
  if (bitmap_stats_ != NULL) bitmap_stats_->Clear();
  clear_has_bitmap_stats();
}
inline const ::ci::BitmapStats& EvaluationResults::_internal_bitmap_stats() const {
  return *bitmap_stats_;
}
inline const ::ci::BitmapStats& EvaluationResults::bitmap_stats() const {
  const ::ci::BitmapStats* p = bitmap_stats_;
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.bitmap_stats)
  return p != NULL ? *p : *reinterpret_cast<const ::ci::BitmapStats*>(
      &::ci::_BitmapStats_default_instance_);
}
inline ::ci::BitmapStats* EvaluationResults::release_bitmap_stats() {
  // @@protoc_insertion_point(field_release:ci.EvaluationResults.bitmap_stats)
  clear_has_bitmap_stats();
  ::ci::BitmapStats* temp = bitmap_stats_;
  bitmap_stats_ = NULL;
  return temp;
}
inline ::ci::BitmapStats* EvaluationResults::mutable_bitmap_stats() {
  set_has_bitmap_stats();
  if (bitmap_stats_ == NULL) {
    auto* p = CreateMaybeMessage<::ci::BitmapStats>(GetArenaNoVirtual());
    bitmap_stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ci.EvaluationResults.bitmap_stats)
  return bitmap_stats_;
}
inline void EvaluationResults::set_allocated_bitmap_stats(::ci::BitmapStats* bitmap_stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bitmap_stats_;
  }
  if (bitmap_stats) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bitmap_stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bitmap_stats, submessage_arena);
    }
    set_has_bitmap_stats();
  } else {
    clear_has_bitmap_stats();
  }
  bitmap_stats_ = bitmap_stats;
  // @@protoc_insertion_point(field_set_allocated:ci.EvaluationResults.bitmap_stats)
}

// repeated .ci.EvaluationResults.TestCase test_cases = 8;
inline int EvaluationResults::test_cases_size() const {
  return test_cases_.size();
}
inline void EvaluationResults::clear_test_cases() {
  test_cases_.Clear();
}
inline ::ci::EvaluationResults_TestCase* EvaluationResults::mutable_test_cases(int index) {
  // @@protoc_insertion_point(field_mutable:ci.EvaluationResults.test_cases)
  return test_cases_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ci::EvaluationResults_TestCase >*
EvaluationResults::mutable_test_cases() {
  // @@protoc_insertion_point(field_mutable_list:ci.EvaluationResults.test_cases)
  return &test_cases_;
}
inline const ::ci::EvaluationResults_TestCase& EvaluationResults::test_cases(int index) const {
  // @@protoc_insertion_point(field_get:ci.EvaluationResults.test_cases)
  return test_cases_.Get(index);
}
inline ::ci::EvaluationResults_TestCase* EvaluationResults::add_test_cases() {
  // @@protoc_insertion_point(field_add:ci.EvaluationResults.test_cases)
  return test_cases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ci::EvaluationResults_TestCase >&
EvaluationResults::test_cases() const {
  // @@protoc_insertion_point(field_list:ci.EvaluationResults.test_cases)
  return test_cases_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ci

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_evaluation_2eproto
